<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>spnt-root-pom</artifactId>
        <groupId>org.spantus</groupId>
        <version>0.3-SNAPSHOT</version>
    </parent>

    <artifactId>spnt-standalone</artifactId>
    <name>Spantus - Standalone module</name>
    <packaging>pom</packaging>

  <properties>
    <altDeploymentRepository>cloudbees-private-snapshot-repository::default::dav:https://repository-spantus.forge.cloudbees.com/snapshot/</altDeploymentRepository>
  </properties>

    <dependencies>
        <dependency>
            <groupId>org.spantus</groupId>
            <artifactId>spnt-work-ui</artifactId>
            <classifier>${envClassifier}</classifier>
        </dependency>
    </dependencies>
            <build>
                <plugins>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>1.4</version>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
        <![CDATA[
        println("==== Creating version.txt ====");
		
        File confDir = new File("${project.build.directory}","classes");
        confDir.mkdirs();
/*
        if(confDir.exists() && !confDir.isDirectory()) {
            println("Conf dir is not a directory, wont create version.txt!");
            return;
        }
        if(!confDir.exists()) {
            confDir.mkdirs();
        }
*/
        versionFile = new File(confDir,"version.properties");
        if(versionFile.exists() && versionFile.isDirectory()) {
            println("Version file exists and is directory! Wont overwrite");
            return;
        }

	println("Creating Version File: " + versionFile.toString());
 
	versionFile.write("groupId = ${project.groupId}\n")
	versionFile.append("artifactId = ${project.artifactId}\n");
	versionFile.append("version = ${project.version}\n");
	versionFile.append("timestamp = ${maven.build.timestamp}\n");


        String buildTag = "";
        String buildNumber = "";
        String buildId = "";
        try {
            buildTag = "${BUILD_TAG}";
            buildNumber = "${BUILD_NUMBER}";
            buildId = "${BUILD_ID}";

            versionFile.append("BUILD_TAG = " + buildTag + "\n");
            versionFile.append("BUILD_NUMBER = " + buildNumber + "\n");
            versionFile.append("BUILD_ID = " + buildId + "\n");

        } catch (Exception e) {
            println("============= Could not find BUILD_TAG probably this is not a Jenkins/Hudson build ===========");
        }

        ]]>
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>




                    <plugin>
                    	<groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.3</version>
                        <executions>
                            <execution>
                                <id>base</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <finalName>${project.build.finalName}-${envClassifier}</finalName>
                                    <descriptors>
                                        <descriptor>src/assembly/zip-spnt.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

	<plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>target/${project.build.finalName}-${envClassifier}-bin.zip</file>
                  <type>zip</type>
                  <classifier>bin</classifier>
                </artifact>
                ...
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>

                </plugins>
            </build>
</project>
